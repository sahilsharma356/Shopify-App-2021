{"version":3,"sources":["components/layout/SignedInButtons.js","store/actions/authActions.js","components/layout/SignedOutButtons.js","components/layout/Navbar.js","components/images/ImageList.js","components/dashboard/Dashboard.js","components/auth/signInPage.js","components/auth/signUpPage.js","config/fbConfig.js","components/images/CreateImage.js","store/actions/imageActions.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/imageReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","fontSize","onClick","profile","initials","SignedOutButtons","state","console","log","firebase","links","uid","useStyles","makeStyles","theme","grid","width","margin","paper","padding","spacing","textAlign","color","palette","text","secondary","media","maxWidth","maxHeight","root","display","flexWrap","justifyContent","overflow","marginTop","gridList","gridListTile","footer","icon","ImageList","images","classes","GridList","cellHeight","cols","map","tile","GridListTile","src","source","GridListTileBar","title","subtitle","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","id","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","signInPage","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","signUpPage","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","user","set","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","storage","CreateImage","image","files","createImage","history","push","a","prof","authorID","ref","name","put","on","snapshot","error","child","getDownloadURL","url","add","Date","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","action","message","imageReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5c6aa63.chunk.js","sourcesContent":["import React, { Profiler } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions'\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\nconst SignedInButtons = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\"><div><AddAPhotoIcon fontSize=\"small\"></AddAPhotoIcon> Add New Image</div></NavLink></li>\n            <li> <a onClick={props.signOut}><NavLink to=\"/\">Logout</NavLink></a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating orange lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\nexport default connect(null, mapDispatchToProps)(SignedInButtons); ","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase(); \n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({type: 'LOGIN_SUCCESS'});\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err});\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => { //create user in firestore\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => { //dispatch action to signup success\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch((err) => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutButtons = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutButtons; ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInButtons from './SignedInButtons';\nimport SignedOutButtons from './SignedOutButtons';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props \n\n    const links = auth.uid ? <SignedInButtons profile={profile}></SignedInButtons> : <SignedOutButtons></SignedOutButtons>\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">Image Repository</Link>\n                {links}\n        \n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar); ","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport moment from 'moment'\n\nconst useStyles = makeStyles((theme) => ({\n    grid: {\n        width: '100%',\n        margin: '0px'\n    },\n\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n\n    media: {\n        maxWidth: '100%',\n        maxHeight: '100%'\n    },\n\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        marginTop: '5%'\n    },\n    gridList: {\n        maxHeight: '100%',\n        maxWidth: '100%',\n    },\n    gridListTile: {\n        // backgroundColor: \"black\",\n        marginTop: \"10%\"\n    },\n    footer: {\n        maxHeight: '100%',\n        maxWidth: '100%'\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\n\nconst ImageList = ({images}) => {\n    // {console.log(\"logging image list\")}\n    // {console.log(images)}\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={375} spacing={15} className={classes.gridList} cols={3}>\n                {images && images.map((tile) => (\n                        <GridListTile className={classes.gridList} key={tile.id}>  \n                            <img src={tile.source}/>\n                            <GridListTileBar\n                                className = {classes.gridListTile}\n                                title={tile.title}\n                                subtitle={\n                                    <>\n                                        <span>{tile.authorFirstName + \" \" + tile.authorLastName + \",  \"}</span>\n                                        <span>{moment(tile.createdAt.toDate()).calendar()}</span>\n                                    </>\n                                }\n                            />\n                        </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    )\n}\n\nexport default ImageList","import React, { Component } from 'react'\nimport ImageList from '../images/ImageList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render(){\n        const { images, auth } = this.props; //destructure\n\n        if(!auth.uid) return <Redirect to=\"/signin\" />\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m12\">\n                        <ImageList images={images}></ImageList>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        images: state.firestore.ordered.images,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'images'} //this component now listens to the images collection, on change fires the action to the firebaseReducer in order to sink local store with firebase\n    ])\n)(Dashboard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass signInPage extends Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault(); \n        this.props.signIn(this.state)\n\n    }\n\n    render() {\n        const { authError, auth } = this.props\n\n        if(auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div>\n                <div className=\"container\">\n                    <form onSubmit={this.handleSubmit} className=\"white\">\n                        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <button className=\"btn orange lighten-1 z-depth-0\">Login</button>\n                        </div>  \n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>    \n                    </form>    \n                </div>            \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signInPage)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n \nclass signUpPage extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault(); \n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth, authError } = this.props\n\n        if(auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div>\n                <div className=\"container\">\n                    <form onSubmit={this.handleSubmit} className=\"white\">\n                        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"firstName\">First Name</label>\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"lastName\">Last Name</label>\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <button className=\"btn orange lighten-1 z-depth-0\">Sign Up</button>\n                        </div>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}    \n                        </div>      \n                    </form>    \n                </div>            \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(signUpPage)\n","import firebase from 'firebase/app'\nimport \"firebase/storage\"\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyClS-D_hARPyBd1suwF7_O7y9aHdCSahzc\",\n    authDomain: \"image-repo-app.firebaseapp.com\",\n    projectId: \"image-repo-app\",\n    storageBucket: \"image-repo-app.appspot.com\",\n    messagingSenderId: \"542304685495\",\n    appId: \"1:542304685495:web:d25f8c077f816dabcf6c32\",\n    measurementId: \"G-FB5TW7SBD7\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({timestampsInSnapshots: true})\n\n  const storage = firebase.storage(); \n\n  export { storage, firebase as default}; ","import React, { Component } from 'react'\nimport { createImage } from \"../../store/actions/imageActions\"\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateImage extends Component {\n    state = {\n        title: \"\",\n        image: null\n    }\n\n    handleChange = (e) => {\n        if (e.target.id === 'title'){\n            this.setState({\n                title: e.target.value\n            })\n        } \n        \n        if (e.target.id === 'image'){\n            this.setState({\n                image: e.target.files[0]\n            })\n        } \n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault(); \n        console.log(\"outputting state\")\n        console.log(this.state)\n        this.props.createImage(this.state)\n\n        this.props.history.push(\"/\")\n    }\n\n    render() {\n        const { auth } = this.props;\n\n        if(!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <div>\n                <div className=\"container\">\n                    <form onSubmit={this.handleSubmit} className=\"white\">\n                        <h5 className=\"grey-text text-darken-3\">Add a new Image</h5>\n                        <div className=\"input-field\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <input type=\"file\" id=\"image\" onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"input-field\">\n                            <button className=\"btn orange lighten-1 z-depth-0\">ADD</button>\n                        </div>      \n                    </form>    \n                </div>            \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => { //makes function createImage available from within props, can pass the image via dispatch\n    return {\n        createImage: (image) => dispatch(createImage(image))\n    }\n}\n\nexport default (connect)(mapStateToProps, mapDispatchToProps)(CreateImage)\n","import { storage } from '../../config/fbConfig'\n\nexport const createImage = (image) => {\n    return async (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n\n        const prof = getState().firebase.profile;\n        const authorID = getState().firebase.auth.uid;\n        \n        const uploadTask = storage.ref(`images/${image.image.name}`).put(image.image);\n\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => {},\n            error => {\n                console.log(error);\n            },\n            () => {\n                storage.ref(\"images\")\n                .child(image.image.name)\n                .getDownloadURL()\n                .then(url => {\n                    console.log(url)\n                    firestore.collection('images').add({\n                        title: image.title,\n                        authorFirstName: prof.firstName,\n                        authorLastName: prof.lastName,\n                        authorID: authorID,\n                        createdAt: new Date(),\n                        source: url\n                    }).then(() => {\n                        dispatch({type: 'ADD_IMAGE', image: image})\n                    }).catch((err) => {\n                        dispatch({type: 'ADD_IMAGE_ERR', err})\n                    })\n                })\n            }\n        )\n        \n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport signInPage from './components/auth/signInPage';\nimport signUpPage from './components/auth/signUpPage';\nimport CreateImage from './components/images/CreateImage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}></Route>\n          <Route path=\"/signin\" component={signInPage}></Route>\n          <Route path=\"/signup\" component={signUpPage}></Route>\n          <Route path=\"/create\" component={CreateImage}></Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n   )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR': \n            return {\n                ...state,\n                authError: 'login failed'\n            }; \n\n        case 'LOGIN_SUCCESS':\n            console.log(\"login success\")\n            return {\n                ...state,\n                authError: null\n            }\n        \n        case 'SIGNOUT_SUCCESS':\n            console.log(\"sign out success\")\n            return state; \n\n        case 'SIGNUP_SUCCESS':\n            console.log(\"signup successful\")\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNUP_ERROR':\n            console.log(\"signup error\")\n            return {\n                ...state,\n                authError: action.err.message\n            }\n\n        default:\n            break;\n    }\n    \n    return state\n\n}\n\nexport default authReducer","\nconst imageReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'ADD_IMAGE':\n            console.log(\"created image\", action.image)\n            return state;\n\n        case 'ADD_IMAGE_ERR':\n            console.log(\"Error while adding image: \", action.err)\n            return state;\n            \n        default:\n            return state;\n    }\n\n}\n\nexport default imageReducer","import authReducer from './authReducer'\nimport imageReducer from './imageReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    image: imageReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer, \n  compose ( //combine multile store enhancers \n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig), //store enhancers\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}) //store enhancers\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => { //dont render to DOM until firebase is ready \n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}